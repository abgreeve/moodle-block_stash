{"version":3,"file":"main.min.js","sources":["../../../src/local/removals/main.js"],"sourcesContent":["import ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport * as tradeAdder from 'block_stash/local/trade_adder/main';\nimport Ajax from 'core/ajax';\nimport * as getItems from 'block_stash/local/datasources/items-getter';\nimport {get_string as getString} from 'core/str';\nimport * as Toast from 'core/toast';\n\nconst showModal = async(courseid, editdetails = []) => {\n    const modal = await buildModal(courseid, editdetails);\n    displayModal(modal, courseid);\n};\n\nconst buildModal = async(courseid, editdetails) => {\n\n    // Fetch quizzes.\n    let quizzes = await fetchQuizData(courseid);\n\n    quizzes.activities.forEach((quiz) => {\n        quiz['selected'] = false;\n        if (editdetails.length !== 0) {\n            if (quiz.id == editdetails.quizid) {\n                quiz['selected'] = true;\n            }\n        }\n    });\n\n    let context = {'courseid': courseid, 'quizzes': quizzes.activities};\n    if (editdetails.length !== 0) {\n        let allitems = await getItems.getIndexedItems(courseid);\n        let additemsdata = [];\n        editdetails.items.forEach((item) => {\n            additemsdata.push(\n                {\n                    'itemid': item.itemid,\n                    'name': allitems[item.itemid].name,\n                    'quantity': item.quantity,\n                    'imageurl': allitems[item.itemid].imageurl\n                }\n            );\n        });\n        context['additems'] = additemsdata;\n        context['removalid'] = editdetails.removalid;\n    }\n    window.console.log(context);\n\n    return ModalFactory.create({\n        title: getString('configureremoval', 'block_stash'),\n        body: Templates.render('block_stash/local/removal/removal_form', context),\n        type: ModalFactory.types.SAVE_CANCEL\n    });\n};\n\nconst displayModal = async(modal, courseid) => {\n\n    modal.getRoot().on(ModalEvents.bodyRendered, () => {\n        tradeAdder.init();\n        tradeAdder.registerActions();\n    });\n\n    modal.getRoot().on(ModalEvents.save, () => {\n        saveData(courseid);\n    });\n\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        modal.destroy();\n    });\n    modal.show();\n};\n\nconst saveData = async (courseid) => {\n    let itemsinfo = document.querySelectorAll('.block-stash-quantity');\n    let items = [];\n    let returnitemdata = [];\n    itemsinfo.forEach((item) => {\n        let itemid = item.closest('.block-stash-trade-item').getAttribute('data-id');\n        let basedata = {\n            'itemid': parseInt(itemid),\n            'quantity': parseInt(item.value)\n        };\n        // Do it again, but duplicating objects just ends up with a reference which is not what I want.\n        let fulldata = {\n            'itemid': parseInt(itemid),\n            'quantity': parseInt(item.value),\n            'name': item.closest('.block-stash-trade-item').children[0].innerText.trim()\n        };\n        items.push(basedata);\n        returnitemdata.push(fulldata);\n    });\n    let quizselect = document.querySelector('.block-stash-quiz-select');\n    let cmid = quizselect.value;\n    if (cmid === '0') {\n        await Toast.addToastRegion(document.querySelector('.modal-body'));\n        Toast.add(getString('selectquizcheck', 'block_stash'), {\n            type: 'danger',\n            autohide: true,\n            closeButton: true,\n        });\n        return false;\n    }\n    let removalid = 0;\n    let removalelement = document.getElementById('block_stash_removal_id');\n    if (removalelement) {\n        removalid = updateRemovalEntry(courseid, parseInt(cmid), items, removalelement.dataset.id).then(() => {\n            Toast.add(getString('configupdated', 'block_stash'), {\n                type: 'info',\n                autohide: true,\n                closeButton: true,\n            });\n        });\n    } else {\n        removalid = await saveRemovalEntry(courseid, parseInt(cmid), items);\n    }\n\n    let context = {\n        'cmid': cmid,\n        'cmname': quizselect.item(quizselect.selectedIndex).text,\n        'courseid': courseid,\n        'removalid': removalid,\n        'items': returnitemdata,\n        'editinfo': JSON.stringify(items)\n    };\n    // window.console.log(context);\n    Templates.render('block_stash/local/removal/table_row', context).then((html, js) => {\n        if (!removalelement) {\n            let tableobject = document.querySelector('.block-stash-removal-body');\n            let things = Templates.appendNodeContents(tableobject, html, js);\n            registerDeleteEvent(courseid, things[0].querySelector('.block-stash-removal-icon'));\n            registerEditEvent(courseid, things[0].querySelector('.block-stash-removal-edit'));\n        } else {\n            let rowelement = document.querySelector('.block-stash-removal-edit[data-id=\"' + removalid + '\"');\n            let tmpe = rowelement.closest('tr');\n            let things = Templates.replaceNode(tmpe, html, js);\n            registerDeleteEvent(courseid, things[0].querySelector('.block-stash-removal-icon'));\n            registerEditEvent(courseid, things[0].querySelector('.block-stash-removal-edit'));\n        }\n    });\n};\n\nconst registerDeleteEvent = (courseid, deleteobject) => {\n    deleteobject.addEventListener('click', (e) => {\n        e.preventDefault();\n        let deletionelement = e.currentTarget;\n        let removalid = deletionelement.dataset.id;\n        // Make ajax request to delete this removal configuration.\n        deleteRemovalEntry(courseid, parseInt(removalid)).then(() => {\n            // If the request was okay then remove the table row.\n            let row = deletionelement.closest('tr');\n            row.remove();\n            Toast.add(getString('configdeleted', 'block_stash'), {\n                type: 'info',\n                autohide: true,\n                closeButton: true,\n            });\n        });\n    });\n};\n\nconst registerEditEvent = (courseid, editobject) => {\n    editobject.addEventListener('click', (e) => {\n        e.preventDefault();\n        let jsondata = JSON.parse(editobject.dataset.json);\n        let details = {'removalid': editobject.dataset.id, 'quizid': editobject.dataset.quiz, 'items': jsondata};\n        showModal(courseid, details);\n    });\n};\n\nexport const init = (courseid) => {\n\n    let configbutton = document.querySelector('.block-config-removal');\n    configbutton.addEventListener('click', (e) => {\n        e.preventDefault();\n        showModal(courseid);\n    });\n\n    let deletebutton = document.querySelectorAll('.block-stash-removal-icon');\n    deletebutton.forEach((deleteobject) => {\n        registerDeleteEvent(courseid, deleteobject);\n    });\n\n    let editbutton = document.querySelectorAll('.block-stash-removal-edit');\n    editbutton.forEach((editobject) => {\n        registerEditEvent(courseid, editobject);\n    });\n};\n\nconst fetchQuizData = (courseid) => Ajax.call([{\n    methodname: 'block_stash_get_removal_activities',\n    args: {courseid: courseid}\n}])[0];\n\nconst saveRemovalEntry = (courseid, cmid, items) => Ajax.call([{\n    methodname: 'block_stash_save_removal',\n    args: {'courseid': courseid, 'cmid': cmid, 'items': items}\n}])[0];\n\nconst updateRemovalEntry = (courseid, cmid, items, removalid) => Ajax.call([{\n    methodname: 'block_stash_save_removal',\n    args: {'courseid': courseid, 'cmid': cmid, 'items': items, 'removalid': removalid}\n}])[0];\n\nconst deleteRemovalEntry = (courseid, removalid) => Ajax.call([{\n    methodname: 'block_stash_delete_removal',\n    args: {'courseid': courseid, 'removalid': removalid}\n}])[0];\n"],"names":["_interopRequireWildcard","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","_interopRequireDefault","_modal_factory","_modal_events","_templates","tradeAdder","_ajax","getItems","Toast","showModal","async","courseid","editdetails","arguments","length","undefined","modal","buildModal","displayModal","quizzes","fetchQuizData","activities","forEach","quiz","id","quizid","context","allitems","getIndexedItems","additemsdata","items","item","push","itemid","name","quantity","imageurl","removalid","window","console","log","ModalFactory","create","title","getString","body","Templates","render","type","types","SAVE_CANCEL","getRoot","on","ModalEvents","bodyRendered","init","registerActions","save","saveData","hidden","destroy","show","itemsinfo","document","querySelectorAll","returnitemdata","closest","getAttribute","basedata","parseInt","value","fulldata","children","innerText","trim","quizselect","querySelector","cmid","addToastRegion","add","autohide","closeButton","removalelement","getElementById","updateRemovalEntry","dataset","then","saveRemovalEntry","cmname","selectedIndex","text","editinfo","JSON","stringify","html","js","tmpe","things","replaceNode","registerDeleteEvent","registerEditEvent","tableobject","appendNodeContents","deleteobject","addEventListener","preventDefault","deletionelement","currentTarget","deleteRemovalEntry","remove","editobject","jsondata","parse","json","details","_exports","Ajax","methodname","args"],"mappings":"qUAOoC,SAAAA,wBAAAC,EAAAC,yBAAAC,YAAAC,MAAAD,QAAAE,MAAAF,eAAAH,iCAAAC,EAAAC,OAAAA,GAAAD,GAAAA,EAAAK,kBAAAL,MAAAM,EAAAC,EAAAC,GAAAC,eAAAC,QAAAV,aAAAA,oBAAAA,sBAAAA,SAAAQ,KAAAF,EAAAL,EAAAG,EAAAD,MAAAG,EAAAK,IAAAX,UAAAM,EAAAM,IAAAZ,GAAAM,EAAAO,IAAAb,EAAAQ,aAAAP,KAAAD,cAAAC,MAAAa,eAAAC,KAAAf,EAAAC,MAAAM,GAAAD,EAAAU,OAAAC,iBAAAD,OAAAE,yBAAAlB,EAAAC,MAAAM,EAAAK,KAAAL,EAAAM,KAAAP,EAAAE,EAAAP,EAAAM,GAAAC,EAAAP,GAAAD,EAAAC,WAAAO,IAAAR,EAAAC,GAAA,SAAAkB,uBAAAnB,UAAAA,GAAAA,EAAAK,WAAAL,GAAAU,QAAAV,gFAPpCoB,eAAAD,uBAAAC,gBACAC,cAAAF,uBAAAE,eACAC,WAAAH,uBAAAG,YACAC,WAAAxB,wBAAAwB,YACAC,MAAAL,uBAAAK,OACAC,SAAA1B,wBAAA0B,UAEAC,MAAA3B,wBAAA2B,OAEA,MAAMC,UAAYC,eAAMC,UAA+B,IAArBC,YAAWC,UAAAC,eAAAC,IAAAF,aAAAA,aAAG,GAC5C,MAAMG,YAAcC,WAAWN,SAAUC,aACzCM,aAAaF,MAAOL,WAGlBM,WAAaP,MAAMC,SAAUC,eAG/B,IAAIO,cAAgBC,cAAcT,UAElCQ,QAAQE,WAAWC,QAASC,OACxBA,KAAe,UAAI,EACQ,IAAvBX,YAAYE,QACRS,KAAKC,IAAMZ,YAAYa,SACvBF,KAAe,UAAI,KAK/B,IAAIG,QAAU,CAACf,SAAYA,SAAUQ,QAAWA,QAAQE,YACxD,GAA2B,IAAvBT,YAAYE,OAAc,CAC1B,IAAIa,eAAiBpB,SAASqB,gBAAgBjB,UAC1CkB,aAAe,GACnBjB,YAAYkB,MAAMR,QAASS,OACvBF,aAAaG,KACT,CACIC,OAAUF,KAAKE,OACfC,KAAQP,SAASI,KAAKE,QAAQC,KAC9BC,SAAYJ,KAAKI,SACjBC,SAAYT,SAASI,KAAKE,QAAQG,aAI9CV,QAAkB,SAAIG,aACtBH,QAAmB,UAAId,YAAYyB,UAIvC,OAFAC,OAAOC,QAAQC,IAAId,SAEZe,uBAAaC,OAAO,CACvBC,OAAO,EAAAC,iBAAU,mBAAoB,eACrCC,KAAMC,mBAAUC,OAAO,yCAA0CrB,SACjEsB,KAAMP,uBAAaQ,MAAMC,eAI3BhC,aAAeR,MAAMM,MAAOL,YAE9BK,MAAMmC,UAAUC,GAAGC,sBAAYC,aAAc,KACzCjD,WAAWkD,OACXlD,WAAWmD,oBAGfxC,MAAMmC,UAAUC,GAAGC,sBAAYI,KAAM,KACjCC,SAAS/C,YAGbK,MAAMmC,UAAUC,GAAGC,sBAAYM,OAAQ,KACnC3C,MAAM4C,YAEV5C,MAAM6C,QAGJH,SAAWhD,iBACb,IAAIoD,UAAYC,SAASC,iBAAiB,yBACtClC,MAAQ,GACRmC,eAAiB,GACrBH,UAAUxC,QAASS,OACf,IAAIE,OAASF,KAAKmC,QAAQ,2BAA2BC,aAAa,WAC9DC,SAAW,CACXnC,OAAUoC,SAASpC,QACnBE,SAAYkC,SAAStC,KAAKuC,QAG1BC,SAAW,CACXtC,OAAUoC,SAASpC,QACnBE,SAAYkC,SAAStC,KAAKuC,OAC1BpC,KAAQH,KAAKmC,QAAQ,2BAA2BM,SAAS,GAAGC,UAAUC,QAE1E5C,MAAME,KAAKoC,UACXH,eAAejC,KAAKuC,YAExB,IAAII,WAAaZ,SAASa,cAAc,4BACpCC,KAAOF,WAAWL,MACtB,GAAa,MAATO,KAOA,aANMrE,MAAMsE,eAAef,SAASa,cAAc,gBAClDpE,MAAMuE,KAAI,EAAAnC,iBAAU,kBAAmB,eAAgB,CACnDI,KAAM,SACNgC,UAAU,EACVC,aAAa,KAEV,EAEX,IAAI5C,UAAY,EACZ6C,eAAiBnB,SAASoB,eAAe,0BAEzC9C,UADA6C,eACYE,mBAAmBzE,SAAU0D,SAASQ,MAAO/C,MAAOoD,eAAeG,QAAQ7D,IAAI8D,KAAK,KAC5F9E,MAAMuE,KAAI,EAAAnC,iBAAU,gBAAiB,eAAgB,CACjDI,KAAM,OACNgC,UAAU,EACVC,aAAa,YAIHM,iBAAiB5E,SAAU0D,SAASQ,MAAO/C,OAGjE,IAAIJ,QAAU,CACVmD,KAAQA,KACRW,OAAUb,WAAW5C,KAAK4C,WAAWc,eAAeC,KACpD/E,SAAYA,SACZ0B,UAAaA,UACbP,MAASmC,eACT0B,SAAYC,KAAKC,UAAU/D,QAG/BgB,mBAAUC,OAAO,sCAAuCrB,SAAS4D,KAAK,CAACQ,KAAMC,MACzE,GAAKb,eAKE,CACH,IACIc,KADajC,SAASa,cAAc,sCAAwCvC,UAAY,KACtE6B,QAAQ,MAC1B+B,OAASnD,mBAAUoD,YAAYF,KAAMF,KAAMC,IAC/CI,oBAAoBxF,SAAUsF,OAAO,GAAGrB,cAAc,8BACtDwB,kBAAkBzF,SAAUsF,OAAO,GAAGrB,cAAc,kCAVnC,CACjB,IAAIyB,YAActC,SAASa,cAAc,6BACrCqB,OAASnD,mBAAUwD,mBAAmBD,YAAaP,KAAMC,IAC7DI,oBAAoBxF,SAAUsF,OAAO,GAAGrB,cAAc,8BACtDwB,kBAAkBzF,SAAUsF,OAAO,GAAGrB,cAAc,kCAW1DuB,oBAAsBA,CAACxF,SAAU4F,gBACnCA,aAAaC,iBAAiB,QAAU1H,IACpCA,EAAE2H,iBACF,IAAIC,gBAAkB5H,EAAE6H,cACpBtE,UAAYqE,gBAAgBrB,QAAQ7D,GAExCoF,mBAAmBjG,SAAU0D,SAAShC,YAAYiD,KAAK,KAEzCoB,gBAAgBxC,QAAQ,MAC9B2C,SACJrG,MAAMuE,KAAI,EAAAnC,iBAAU,gBAAiB,eAAgB,CACjDI,KAAM,OACNgC,UAAU,EACVC,aAAa,SAMvBmB,kBAAoBA,CAACzF,SAAUmG,cACjCA,WAAWN,iBAAiB,QAAU1H,IAClCA,EAAE2H,iBACF,IAAIM,SAAWnB,KAAKoB,MAAMF,WAAWzB,QAAQ4B,MACzCC,QAAU,CAAC7E,UAAayE,WAAWzB,QAAQ7D,GAAIC,OAAUqF,WAAWzB,QAAQ9D,KAAMO,MAASiF,UAC/FtG,UAAUE,SAAUuG,YAqB1BC,SAAA5D,KAjBmB5C,WAEEoD,SAASa,cAAc,yBAC7B4B,iBAAiB,QAAU1H,IACpCA,EAAE2H,iBACFhG,UAAUE,YAGKoD,SAASC,iBAAiB,6BAChC1C,QAASiF,eAClBJ,oBAAoBxF,SAAU4F,gBAGjBxC,SAASC,iBAAiB,6BAChC1C,QAASwF,aAChBV,kBAAkBzF,SAAUmG,eAIpC,MAAM1F,cAAiBT,UAAayG,cAAKvH,KAAK,CAAC,CAC3CwH,WAAY,qCACZC,KAAM,CAAC3G,SAAUA,aACjB,GAEE4E,iBAAmBA,CAAC5E,SAAUkE,KAAM/C,QAAUsF,cAAKvH,KAAK,CAAC,CAC3DwH,WAAY,2BACZC,KAAM,CAAC3G,SAAYA,SAAUkE,KAAQA,KAAM/C,MAASA,UACpD,GAEEsD,mBAAqBA,CAACzE,SAAUkE,KAAM/C,MAAOO,YAAc+E,cAAKvH,KAAK,CAAC,CACxEwH,WAAY,2BACZC,KAAM,CAAC3G,SAAYA,SAAUkE,KAAQA,KAAM/C,MAASA,MAAOO,UAAaA,cACxE,GAEEuE,mBAAqBA,CAACjG,SAAU0B,YAAc+E,cAAKvH,KAAK,CAAC,CAC3DwH,WAAY,6BACZC,KAAM,CAAC3G,SAAYA,SAAU0B,UAAaA,cAC1C,EAAG"}