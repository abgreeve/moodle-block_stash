<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
{"version":3,"file":"stash-area.min.js","sources":["../src/stash-area.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Stash module.\n *\n * @copyright  2016 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine([\n    'jquery',\n    'core/templates',\n    'block_stash/item-modal',\n    'block_stash/drop',\n    'block_stash/trade',\n    'core/pubsub'\n], function($, Templates, ItemModal, Drop, Trade, PubSub) {\n\n    /**\n     * Stash class.\n     *\n     * @class\n     * @param {Node} node The node.\n     */\n    function StashArea(node) {\n        this._node = $(node);\n        this._setUp();\n    }\n    StashArea.prototype._node = null;\n    StashArea.prototype._userItemTemplate = 'block_stash/user_item';\n\n    StashArea.prototype._setUp = function() {\n        PubSub.subscribe('block_stash/drop/pickedup', this._dropPickedUpListener.bind(this));\n        PubSub.subscribe('trade:pickedup', this._dropPickedUpListener.bind(this));\n\n        this._setUpUserItemAreClickable();\n    };\n\n    /**\n     * Add a user item to the stash.\n     *\n     * @param {UserItem} userItem The user item.\n     * @return {Promise}\n     */\n    StashArea.prototype.addUserItem = function(userItem) {\n        return this._renderUserItem(userItem).then(function(html, js) {\n            var node = $(html),\n                container = this._node.find('.item-list');\n            node.data('useritem', userItem);\n            this._makeUserItemNodeClickable(node);\n            container.append(' ');  // A hacky separator to replicate natural rendering.\n            container.append(node);\n            Templates.runTemplateJS(js);\n        }.bind(this));\n    };\n\n    /**\n     * Whether the item is in the stash.\n     *\n     * @param {Number} id The item ID.\n     * @return {Boolean}\n     */\n    StashArea.prototype.containsItem = function(id) {\n        return this.getUserItemNode(id).length > 0;\n    };\n\n    /**\n     * Listens to drop picked up events.\n     *\n     * @param {Event} e The event.\n     */\n    StashArea.prototype._dropPickedUpListener = function(e) {\n        var userItem = e.useritem;\n        if (this.containsItem(userItem.getItem().get('id'))) {\n            this.updateUserItemQuantity(userItem);\n        } else {\n            this.addUserItem(userItem).then(function() {\n                this._node.find('.empty-content').remove();\n            }.bind(this));\n        }\n    };\n\n    /**\n     * Get the user item node.\n     *\n     * @param {Number} id The item ID.\n     * @return {Node}\n     */\n    StashArea.prototype.getUserItemNode = function(id) {\n        return this._node.find('.block-stash-item[data-id=' + id + ']');\n    };\n\n    /**\n     * Make a user item node clickable.\n     *\n     * @param {Node} node The node.\n     */\n    StashArea.prototype._makeUserItemNodeClickable = function(node) {\n        node.attr('tabindex', 0);\n        node.attr('role', 'button');\n        node.attr('aria-haspopup', 'true');\n    };\n\n    /**\n     * Render a user item.\n     *\n     * @param {UserItem} userItem The user item.\n     * @return {Promise}\n     */\n    StashArea.prototype._renderUserItem = function(userItem) {\n        return Templates.render(this._userItemTemplate, {\n            item: userItem.getItem().getData(),\n            useritem: userItem.getData(),\n        });\n    };\n\n    /**\n     * Set-up process to handle items being clickable.\n     */\n    StashArea.prototype._setUpUserItemAreClickable = function() {\n        // Make all items as clickable.\n        this._node.find('.item-list .block-stash-item').each(function(i, node) {\n            this._makeUserItemNodeClickable($(node));\n        }.bind(this));\n\n        // Delegate event.\n        var handler = function(e) {\n            var node = $(e.currentTarget),\n                itemId = node.data('id');\n\n            if (!itemId) {\n                return;\n            }\n\n            ItemModal.init(itemId);\n            e.preventDefault();\n        };\n        var selector = '.block-stash-item[aria-haspopup=\"true\"]';\n        this._node.find('.item-list').delegate(selector, 'click', handler);\n        this._node.find('.item-list').delegate(selector, 'keydown', function(e) {\n            if (e.keyCode != 13 && e.keyCode != 32) {\n                return;\n            }\n            handler(e);\n        });\n    };\n\n    /**\n     * Update the quantity of a user item.\n     *\n     * @param {UserItem} userItem The user item.\n     */\n    StashArea.prototype.updateUserItemQuantity = function(userItem) {\n        var node = this.getUserItemNode(userItem.getItem().get('id')),\n            quantityNode = node.find('.item-quantity'),\n            newQuantity = userItem.get('quantity'),\n            quantity = parseInt(quantityNode.text(), 10);\n\n        quantityNode.text(newQuantity);\n        node.removeClass('item-quantity-' + quantity);\n        node.addClass('item-quantity-' + newQuantity);\n    };\n\n    return /** @alias module:block_stash/stash */ StashArea;\n\n});\n"],"names":["define","$","Templates","ItemModal","Drop","Trade","PubSub","StashArea","node","this","_node","_setUp","prototype","_userItemTemplate","subscribe","_dropPickedUpListener","bind","_setUpUserItemAreClickable","addUserItem","userItem","_renderUserItem","then","html","js","container","find","data","_makeUserItemNodeClickable","append","runTemplateJS","containsItem","id","getUserItemNode","length","e","useritem","getItem","get","updateUserItemQuantity","remove","attr","render","item","getData","each","i","handler","itemId","currentTarget","init","preventDefault","selector","delegate","keyCode","quantityNode","newQuantity","quantity","parseInt","text","removeClass","addClass"],"mappings":";;;;;;AAsBAA,gCAAO,CACH,SACA,iBACA,yBACA,mBACA,oBACA,eACD,SAASC,EAAGC,UAAWC,UAAWC,KAAMC,MAAOC,QAQ9C,SAASC,UAAUC,MACfC,KAAKC,MAAQT,EAAEO,MACfC,KAAKE,SAyIT,OAvIAJ,UAAUK,UAAUF,MAAQ,KAC5BH,UAAUK,UAAUC,kBAAoB,wBAExCN,UAAUK,UAAUD,OAAS,WACzBL,OAAOQ,UAAU,4BAA6BL,KAAKM,sBAAsBC,KAAKP,OAC9EH,OAAOQ,UAAU,iBAAkBL,KAAKM,sBAAsBC,KAAKP,OAEnEA,KAAKQ,8BASTV,UAAUK,UAAUM,YAAc,SAASC,UACvC,OAAOV,KAAKW,gBAAgBD,UAAUE,KAAK,SAASC,KAAMC,IACtD,IAAIf,KAAOP,EAAEqB,MACTE,UAAYf,KAAKC,MAAMe,KAAK,cAChCjB,KAAKkB,KAAK,WAAYP,UACtBV,KAAKkB,2BAA2BnB,MAChCgB,UAAUI,OAAO,KACjBJ,UAAUI,OAAOpB,MACjBN,UAAU2B,cAAcN,KAC1BP,KAAKP,QASXF,UAAUK,UAAUkB,aAAe,SAASC,IACxC,OAAOtB,KAAKuB,gBAAgBD,IAAIE,OAAS,GAQ7C1B,UAAUK,UAAUG,sBAAwB,SAASmB,GACjD,IAAIf,SAAWe,EAAEC,SACb1B,KAAKqB,aAAaX,SAASiB,UAAUC,IAAI,OACzC5B,KAAK6B,uBAAuBnB,UAE5BV,KAAKS,YAAYC,UAAUE,KAAK,WAC5BZ,KAAKC,MAAMe,KAAK,kBAAkBc,UACpCvB,KAAKP,QAUfF,UAAUK,UAAUoB,gBAAkB,SAASD,IAC3C,OAAOtB,KAAKC,MAAMe,KAAK,6BAA+BM,GAAK,MAQ/DxB,UAAUK,UAAUe,2BAA6B,SAASnB,MACtDA,KAAKgC,KAAK,WAAY,GACtBhC,KAAKgC,KAAK,OAAQ,UAClBhC,KAAKgC,KAAK,gBAAiB,SAS/BjC,UAAUK,UAAUQ,gBAAkB,SAASD,UAC3C,OAAOjB,UAAUuC,OAAOhC,KAAKI,kBAAmB,CAC5C6B,KAAMvB,SAASiB,UAAUO,UACzBR,SAAUhB,SAASwB,aAO3BpC,UAAUK,UAAUK,2BAA6B,WAE7CR,KAAKC,MAAMe,KAAK,gCAAgCmB,KAAK,SAASC,EAAGrC,MAC7DC,KAAKkB,2BAA2B1B,EAAEO,QACpCQ,KAAKP,OAGP,IAAIqC,QAAU,SAASZ,GACnB,IACIa,OADO9C,EAAEiC,EAAEc,eACGtB,KAAK,MAElBqB,SAIL5C,UAAU8C,KAAKF,QACfb,EAAEgB,mBAEFC,SAAW,0CACf1C,KAAKC,MAAMe,KAAK,cAAc2B,SAASD,SAAU,QAASL,SAC1DrC,KAAKC,MAAMe,KAAK,cAAc2B,SAASD,SAAU,UAAW,SAASjB,GAChD,IAAbA,EAAEmB,SAA8B,IAAbnB,EAAEmB,SAGzBP,QAAQZ,MAShB3B,UAAUK,UAAU0B,uBAAyB,SAASnB,UAClD,IAAIX,KAAOC,KAAKuB,gBAAgBb,SAASiB,UAAUC,IAAI,OACnDiB,aAAe9C,KAAKiB,KAAK,kBACzB8B,YAAcpC,SAASkB,IAAI,YAC3BmB,SAAWC,SAASH,aAAaI,OAAQ,IAE7CJ,aAAaI,KAAKH,aAClB/C,KAAKmD,YAAY,iBAAmBH,UACpChD,KAAKoD,SAAS,iBAAmBL,cAGShD,SAElD"}
=======
{"version":3,"file":"stash-area.min.js","sources":["../src/stash-area.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Stash module.\n *\n * @copyright  2016 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport * as ItemModal from 'block_stash/item-modal';\nimport * as PubSub from 'core/pubsub';\nimport Templates from 'core/templates';\n\nvar _collections = [];\n\nexport const init = async(courseid) => {\n    _collections = await getCollectionData(courseid);\n    // window.console.log(_collections);\n    setUpUserItemAreClickable();\n    PubSub.subscribe('block_stash/drop/pickedup', dropPickedUpListener.bind(this));\n    PubSub.subscribe('trade:pickedup', dropPickedUpListener.bind(this));\n};\n\nconst getCollectionData = (courseid) => {\n    return Ajax.call([\n        {\n            methodname: 'block_stash_get_collections',\n            args: {courseid: courseid}\n        }\n    ])[0];\n};\n\nconst renderUserItem = (userItem) => {\n    return Templates.render('block_stash/user_item', {\n        item: userItem.getItem().getData(),\n        useritem: userItem.getData(),\n    });\n};\n\nconst setUpUserItemAreClickable = () => {\n    let stashitems = document.querySelectorAll('.block-stash-item');\n    stashitems.forEach(function(item) {\n        makeUserItemNodeClickable(item);\n    });\n\n    const handler = (e) => {\n        if (e.target.closest('.block-stash-item')) {\n            const itemelement = e.target.closest('.block-stash-item');\n            const itemId = itemelement.dataset.id;\n\n            if (!itemId) {\n                return;\n            }\n\n            ItemModal.init(itemId);\n            e.preventDefault();\n        }\n    };\n\n    let itemlist = document.querySelector('.item-list');\n    itemlist.addEventListener('click', (e) => handler(e));\n    itemlist.addEventListener('keydown', (e) => {\n        if (e.keyCode != 13 && e.keyCode != 32) {\n            return;\n        }\n        handler(e);\n    });\n};\n\nconst makeUserItemNodeClickable = (node) => {\n    node.setAttribute('tabindex', 0);\n    node.setAttribute('role', 'button');\n    node.setAttribute('aria-haspopup', 'true');\n};\n\nconst dropPickedUpListener = (e) => {\n    let userItem = e.useritem;\n    if (containsItem(userItem.getItem().get('id'))) {\n        updateUserItemQuantity(userItem);\n    } else {\n        addUserItem(userItem).then(() => {\n            const emptyelement = document.querySelector('.empty-content');\n            if (emptyelement !== null) {\n                document.querySelector('.empty-content').remove();\n            }\n        });\n    }\n};\n\nconst containsItem = (itemId) => {\n    const itemnode = document.querySelector('.block-stash-item[data-id=\"' + itemId + '\"]');\n    return (itemnode);\n};\n\nconst updateUserItemQuantity = (userItem) => {\n    const itemnode = document.querySelector('.block-stash-item[data-id=\"' + userItem.getItem().get('id') + '\"]'),\n          quantityNode = itemnode.querySelector('.item-quantity'),\n          newQuantity = userItem.get('quantity'),\n          quantity = parseInt(quantityNode.textContent, 10);\n\n    quantityNode.textContent = newQuantity;\n    quantityNode.style.display = 'block';\n    itemnode.classList.remove('item-quantity-' + quantity);\n    itemnode.classList.add('item-quantity-' + newQuantity);\n};\n\nconst addUserItem = (userItem) => {\n    return renderUserItem(userItem).then((html, js) => {\n        // We have two areas to update now, the all tab and the collections tab.\n        window.console.log(_collections);\n        const template = document.createElement('template');\n        template.innerHTML = html;\n        const node = template.content.firstChild;\n        const container = document.querySelector('#allitems');\n        node.dataset.useritem = userItem;\n        makeUserItemNodeClickable(node);\n        container.append(' ');  // A hacky separator to replicate natural rendering.\n        container.append(node);\n        Templates.runTemplateJS(js);\n    });\n};\n"],"names":["_collections","async","getCollectionData","courseid","setUpUserItemAreClickable","PubSub","subscribe","dropPickedUpListener","bind","Ajax","call","methodname","args","document","querySelectorAll","forEach","item","makeUserItemNodeClickable","handler","e","target","closest","itemId","dataset","id","ItemModal","init","preventDefault","itemlist","querySelector","addEventListener","keyCode","node","setAttribute","userItem","useritem","containsItem","getItem","get","updateUserItemQuantity","addUserItem","then","remove","itemnode","quantityNode","newQuantity","quantity","parseInt","textContent","style","display","classList","add","Templates","render","getData","renderUserItem","html","js","window","console","log","template","createElement","innerHTML","content","firstChild","container","append","runTemplateJS"],"mappings":";;;;;;4PA2BIA,aAAe,iBAECC,MAAAA,WAChBD,mBAAqBE,kBAAkBC,UAEvCC,4BACAC,OAAOC,UAAU,4BAA6BC,qBAAqBC,cACnEH,OAAOC,UAAU,iBAAkBC,qBAAqBC,qBAGtDN,kBAAqBC,UAChBM,cAAKC,KAAK,CACb,CACIC,WAAY,8BACZC,KAAM,CAACT,SAAUA,aAEtB,GAUDC,0BAA4B,KACbS,SAASC,iBAAiB,qBAChCC,SAAQ,SAASC,MACxBC,0BAA0BD,eAGxBE,QAAWC,OACTA,EAAEC,OAAOC,QAAQ,qBAAsB,OAEjCC,OADcH,EAAEC,OAAOC,QAAQ,qBACVE,QAAQC,OAE9BF,cAILG,UAAUC,KAAKJ,QACfH,EAAEQ,uBAINC,SAAWf,SAASgB,cAAc,cACtCD,SAASE,iBAAiB,SAAUX,GAAMD,QAAQC,KAClDS,SAASE,iBAAiB,WAAYX,IACjB,IAAbA,EAAEY,SAA8B,IAAbZ,EAAEY,SAGzBb,QAAQC,OAIVF,0BAA6Be,OAC/BA,KAAKC,aAAa,WAAY,GAC9BD,KAAKC,aAAa,OAAQ,UAC1BD,KAAKC,aAAa,gBAAiB,SAGjC1B,qBAAwBY,QACtBe,SAAWf,EAAEgB,SACbC,aAAaF,SAASG,UAAUC,IAAI,OACpCC,uBAAuBL,UAEvBM,YAAYN,UAAUO,MAAK,KAEF,OADA5B,SAASgB,cAAc,mBAExChB,SAASgB,cAAc,kBAAkBa,aAMnDN,aAAgBd,QACDT,SAASgB,cAAc,8BAAgCP,OAAS,MAI/EiB,uBAA0BL,iBACtBS,SAAW9B,SAASgB,cAAc,8BAAgCK,SAASG,UAAUC,IAAI,MAAQ,MACjGM,aAAeD,SAASd,cAAc,kBACtCgB,YAAcX,SAASI,IAAI,YAC3BQ,SAAWC,SAASH,aAAaI,YAAa,IAEpDJ,aAAaI,YAAcH,YAC3BD,aAAaK,MAAMC,QAAU,QAC7BP,SAASQ,UAAUT,OAAO,iBAAmBI,UAC7CH,SAASQ,UAAUC,IAAI,iBAAmBP,cAGxCL,YAAeN,UA1EGA,CAAAA,UACbmB,mBAAUC,OAAO,wBAAyB,CAC7CtC,KAAMkB,SAASG,UAAUkB,UACzBpB,SAAUD,SAASqB,YAwEhBC,CAAetB,UAAUO,MAAK,CAACgB,KAAMC,MAExCC,OAAOC,QAAQC,IAAI7D,oBACb8D,SAAWjD,SAASkD,cAAc,YACxCD,SAASE,UAAYP,WACfzB,KAAO8B,SAASG,QAAQC,WACxBC,UAAYtD,SAASgB,cAAc,aACzCG,KAAKT,QAAQY,SAAWD,SACxBjB,0BAA0Be,MAC1BmC,UAAUC,OAAO,KACjBD,UAAUC,OAAOpC,yBACPqC,cAAcX"}
>>>>>>> b36a8b6 (Web service and re-write of stash-area js)
=======
{"version":3,"file":"stash-area.min.js","sources":["../src/stash-area.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Stash module.\n *\n * @copyright  2016 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport * as ItemModal from 'block_stash/item-modal';\nimport * as PubSub from 'core/pubsub';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\n\nvar _collections = [];\nvar _node = null;\n\nexport const init = async(courseid) => {\n    _node = document.querySelector('.block-stash-main-block');\n    _collections = await getCollectionData(courseid);\n    // window.console.log(_collections);\n    setUpUserItemAreClickable();\n    PubSub.subscribe('block_stash/drop/pickedup', dropPickedUpListener.bind(this));\n    PubSub.subscribe('trade:pickedup', dropPickedUpListener.bind(this));\n};\n\nconst getCollectionData = (courseid) => {\n    return Ajax.call([\n        {\n            methodname: 'block_stash_get_collections',\n            args: {courseid: courseid}\n        }\n    ])[0];\n};\n\nconst renderUserItem = (userItem) => {\n    return Templates.render('block_stash/user_item', {\n        item: userItem.getItem().getData(),\n        useritem: userItem.getData(),\n    });\n};\n\nconst setUpUserItemAreClickable = () => {\n    let stashitems = _node.querySelectorAll('.block-stash-item');\n    stashitems.forEach(function(item) {\n        makeUserItemNodeClickable(item);\n    });\n\n    const handler = (e) => {\n        if (e.target.closest('.block-stash-item')) {\n            const itemelement = e.target.closest('.block-stash-item');\n            const itemId = itemelement.dataset.id;\n\n            if (!itemId) {\n                return;\n            }\n\n            ItemModal.init(itemId);\n            e.preventDefault();\n        }\n    };\n\n    let itemlist = _node.querySelector('.item-list');\n    itemlist.addEventListener('click', (e) => handler(e));\n    itemlist.addEventListener('keydown', (e) => {\n        if (e.keyCode != 13 && e.keyCode != 32) {\n            return;\n        }\n        handler(e);\n    });\n};\n\nconst makeUserItemNodeClickable = (node) => {\n    node.setAttribute('tabindex', 0);\n    node.setAttribute('role', 'button');\n    node.setAttribute('aria-haspopup', 'true');\n};\n\nconst dropPickedUpListener = (e) => {\n    let userItem = e.useritem;\n    if (containsItem(userItem.getItem().get('id'))) {\n        updateUserItemQuantity(userItem);\n    } else {\n        addUserItem(userItem).then(() => {\n            const emptyelement = document.querySelector('.empty-content');\n            if (emptyelement !== null) {\n                document.querySelector('.empty-content').remove();\n            }\n        });\n    }\n};\n\nconst containsItem = (itemId) => {\n    const itemnode = _node.querySelector('.block-stash-item[data-id=\"' + itemId + '\"]');\n    return (itemnode);\n};\n\nconst updateUserItemQuantity = (userItem) => {\n    const itemnodes = _node.querySelectorAll('.block-stash-item[data-id=\"' + userItem.getItem().get('id') + '\"]');\n    itemnodes.forEach((itemnode) => {\n        const quantityNode = itemnode.querySelector('.item-quantity'),\n              newQuantity = userItem.get('quantity'),\n              quantity = parseInt(quantityNode.textContent, 10);\n\n        quantityNode.textContent = newQuantity;\n        quantityNode.style.display = 'block';\n        itemnode.classList.remove('item-quantity-' + quantity);\n        itemnode.classList.add('item-quantity-' + newQuantity);\n    });\n};\n\nconst addUserItem = (userItem) => {\n    return renderUserItem(userItem).then((html, js) => {\n        // We have two areas to update now, the all tab and the collections tab.\n        // window.console.log(_collections);\n        const collectionids = getCollectionDisplayInfo(userItem);\n        const template = document.createElement('template');\n        template.innerHTML = html;\n        const node = template.content.firstChild;\n        // All items display\n        const container = document.querySelector('#allitems');\n        node.dataset.useritem = userItem;\n        makeUserItemNodeClickable(node);\n        container.append(' ');  // A hacky separator to replicate natural rendering.\n        container.append(node);\n\n        // Collections display\n        if (collectionids.length > 0) {\n            collectionids.forEach(async(id) => {\n                let collectionnode = node.cloneNode(true);\n                const collectioncontainer = _node.querySelector('.block-stash-collections[data-collectionid=\"' + id + '\"');\n                if (collectioncontainer) {\n                    collectioncontainer.appendChild(collectionnode);\n                } else {\n                    // If there are no items in the collection then the collection needs to be added.\n                    const collectionelement = document.createElement('fieldset');\n                    collectionelement.classList.add(\"block-stash-collections\", \"mb-1\", \"p-2\");\n                    collectionelement.dataset.collectionid = id;\n                    // Now we need a legend.\n                    const legendelement = document.createElement('legend');\n                    legendelement.classList.add('block-stash-collection-legend', 'p-1');\n                    legendelement.innerText = await getCollectionString(id);\n                    collectionelement.appendChild(legendelement);\n                    collectionelement.appendChild(collectionnode);\n                    const parentelement = _node.querySelector('.block-stash-collections-area');\n                    parentelement.appendChild(collectionelement);\n                }\n            });\n        }\n\n        Templates.runTemplateJS(js);\n    });\n};\n\nconst getCollectionString = async(collectionid) => {\n    const currentcount = countCollectionItems(collectionid);\n    const collection = getInternalCollectionData(collectionid);\n    window.console.log(collection);\n    const data = {\n        name: collection['collection'].name,\n        collected: parseInt(currentcount+1),\n        total: collection['items'].length\n    };\n    const colstring = await getString('collected', 'block_stash', data);\n    return colstring;\n};\n\nconst countCollectionItems = (collectionid) => {\n    const collectioncontainer = _node.querySelector('.block-stash-collections[data-collectionid=\"' + collectionid + '\"');\n    if (!collectioncontainer) {\n        return 0;\n    }\n    const items = collectioncontainer.querySelector('.block-stash-item');\n    return items.length;\n};\n\nconst getInternalCollectionData = (collectionid) => {\n    let collectionresult = null;\n    _collections.forEach((collection) => {\n        window.console.log(collectionid);\n        window.console.log(collection);\n        if (collection['collection'].id == collectionid) {\n\n            window.console.log('yeah here man');\n            collectionresult = collection;\n        }\n    });\n    // window.console.log('yeah here man');\n    return collectionresult;\n};\n\nconst getCollectionDisplayInfo = (userItem) => {\n    // Loop through each collection\n    let data = [];\n    _collections.forEach((collection) => {\n        // Loop through the collections items to see if we have a match.\n        collection['items'].forEach((item) => {\n            if (item.id == userItem.getItem().get('id')) {\n                const quick = collection['collection'];\n                data.push(quick.id);\n            }\n\n        });\n    });\n    return data;\n};\n"],"names":["_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","_interopRequireWildcard","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireDefault","_ajax","ItemModal","PubSub","_templates","_collections","_node","_exports","init","async","document","querySelector","getCollectionData","courseid","setUpUserItemAreClickable","subscribe","dropPickedUpListener","bind","Ajax","methodname","args","querySelectorAll","forEach","item","makeUserItemNodeClickable","handler","e","target","closest","itemId","dataset","id","preventDefault","itemlist","addEventListener","keyCode","node","setAttribute","userItem","useritem","containsItem","getItem","updateUserItemQuantity","addUserItem","then","remove","itemnode","quantityNode","newQuantity","quantity","parseInt","textContent","style","display","classList","add","Templates","render","getData","renderUserItem","html","js","collectionids","getCollectionDisplayInfo","template","createElement","innerHTML","content","firstChild","container","append","length","collectionnode","cloneNode","collectioncontainer","appendChild","collectionelement","collectionid","legendelement","innerText","getCollectionString","runTemplateJS","currentcount","countCollectionItems","collection","getInternalCollectionData","window","console","log","data","name","collected","total","getString","collectionresult","quick","push"],"mappings":"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"}
>>>>>>> fa56b2c (Added dynamic updating of collections)
=======
{"version":3,"file":"stash-area.min.js","sources":["../src/stash-area.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Stash module.\n *\n * @copyright  2016 Frédéric Massart - FMCorz.net\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport * as ItemModal from 'block_stash/item-modal';\nimport * as PubSub from 'core/pubsub';\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\n\nvar _collections = [];\nvar _node = null;\n\nexport const init = async(courseid) => {\n    _node = document.querySelector('.block-stash-main-block');\n    _collections = await getCollectionData(courseid);\n    // window.console.log(_collections);\n    setUpUserItemAreClickable();\n    PubSub.subscribe('block_stash/drop/pickedup', dropPickedUpListener.bind(this));\n    PubSub.subscribe('trade:pickedup', dropPickedUpListener.bind(this));\n};\n\nconst getCollectionData = (courseid) => {\n    return Ajax.call([\n        {\n            methodname: 'block_stash_get_collections',\n            args: {courseid: courseid}\n        }\n    ])[0];\n};\n\nconst renderUserItem = (userItem) => {\n    return Templates.render('block_stash/user_item', {\n        item: userItem.getItem().getData(),\n        useritem: userItem.getData(),\n    });\n};\n\nconst setUpUserItemAreClickable = () => {\n    let stashitems = _node.querySelectorAll('.block-stash-item');\n    stashitems.forEach(function(item) {\n        makeUserItemNodeClickable(item);\n    });\n\n    const handler = (e) => {\n        if (e.target.closest('.block-stash-item')) {\n            const itemelement = e.target.closest('.block-stash-item');\n            const itemId = itemelement.dataset.id;\n\n            if (!itemId) {\n                return;\n            }\n\n            ItemModal.init(itemId);\n            e.preventDefault();\n        }\n    };\n\n    let itemlist = _node.querySelector('.item-list');\n    itemlist.addEventListener('click', (e) => handler(e));\n    itemlist.addEventListener('keydown', (e) => {\n        if (e.keyCode != 13 && e.keyCode != 32) {\n            return;\n        }\n        handler(e);\n    });\n};\n\nconst makeUserItemNodeClickable = (node) => {\n    node.setAttribute('tabindex', 0);\n    node.setAttribute('role', 'button');\n    node.setAttribute('aria-haspopup', 'true');\n};\n\nconst dropPickedUpListener = (e) => {\n    let userItem = e.useritem;\n    if (containsItem(userItem.getItem().get('id'))) {\n        updateUserItemQuantity(userItem);\n    } else {\n        addUserItem(userItem).then(() => {\n            const emptyelement = document.querySelector('.empty-content');\n            if (emptyelement !== null) {\n                document.querySelector('.empty-content').remove();\n            }\n        });\n    }\n};\n\nconst containsItem = (itemId) => {\n    const itemnode = _node.querySelector('.block-stash-item[data-id=\"' + itemId + '\"]');\n    return (itemnode);\n};\n\nconst updateUserItemQuantity = (userItem) => {\n    const itemnodes = _node.querySelectorAll('.block-stash-item[data-id=\"' + userItem.getItem().get('id') + '\"]');\n    itemnodes.forEach((itemnode) => {\n        const quantityNode = itemnode.querySelector('.item-quantity'),\n              newQuantity = userItem.get('quantity'),\n              quantity = parseInt(quantityNode.textContent, 10);\n\n        quantityNode.textContent = newQuantity;\n        quantityNode.style.display = 'block';\n        itemnode.classList.remove('item-quantity-' + quantity);\n        itemnode.classList.add('item-quantity-' + newQuantity);\n    });\n};\n\nconst addUserItem = (userItem) => {\n    return renderUserItem(userItem).then((html, js) => {\n        // We have two areas to update now, the all tab and the collections tab.\n        // window.console.log(_collections);\n        const collectionids = getCollectionDisplayInfo(userItem);\n        const template = document.createElement('template');\n        template.innerHTML = html;\n        const node = template.content.firstChild;\n        // All items display\n        const container = document.querySelector('#allitems');\n        node.dataset.useritem = userItem;\n        makeUserItemNodeClickable(node);\n        container.append(' ');  // A hacky separator to replicate natural rendering.\n        container.append(node);\n\n        // Collections display\n        if (collectionids.length > 0) {\n            collectionids.forEach(async(id) => {\n                let collectionnode = node.cloneNode(true);\n                const collectioncontainer = _node.querySelector('.block-stash-collections[data-collectionid=\"' + id + '\"');\n                if (collectioncontainer) {\n                    collectioncontainer.appendChild(collectionnode);\n                } else {\n                    // If there are no items in the collection then the collection needs to be added.\n                    const collectionelement = document.createElement('fieldset');\n                    collectionelement.classList.add(\"block-stash-collections\", \"mb-1\", \"p-2\");\n                    collectionelement.dataset.collectionid = id;\n                    // Now we need a legend.\n                    const legendelement = document.createElement('legend');\n                    legendelement.classList.add('block-stash-collection-legend', 'p-1');\n                    legendelement.innerText = await getCollectionString(id);\n                    collectionelement.appendChild(legendelement);\n                    collectionelement.appendChild(collectionnode);\n                    const parentelement = _node.querySelector('.block-stash-collections-area');\n                    parentelement.appendChild(collectionelement);\n                }\n            });\n        }\n\n        Templates.runTemplateJS(js);\n    });\n};\n\nconst getCollectionString = async(collectionid) => {\n    const currentcount = countCollectionItems(collectionid);\n    const collection = getInternalCollectionData(collectionid);\n    window.console.log(collection);\n    const data = {\n        name: collection['collection'].name,\n        collected: parseInt(currentcount+1),\n        total: collection['items'].length\n    };\n    const colstring = await getString('collected', 'block_stash', data);\n    return colstring;\n};\n\nconst countCollectionItems = (collectionid) => {\n    const collectioncontainer = _node.querySelector('.block-stash-collections[data-collectionid=\"' + collectionid + '\"');\n    if (!collectioncontainer) {\n        return 0;\n    }\n    const items = collectioncontainer.querySelector('.block-stash-item');\n    return items.length;\n};\n\nconst getInternalCollectionData = (collectionid) => {\n    let collectionresult = null;\n    _collections.forEach((collection) => {\n        window.console.log(collectionid);\n        window.console.log(collection);\n        if (collection['collection'].id == collectionid) {\n\n            window.console.log('yeah here man');\n            collectionresult = collection;\n        }\n    });\n    // window.console.log('yeah here man');\n    return collectionresult;\n};\n\nconst getCollectionDisplayInfo = (userItem) => {\n    // Loop through each collection\n    let data = [];\n    _collections.forEach((collection) => {\n        // Loop through the collections items to see if we have a match.\n        collection['items'].forEach((item) => {\n            if (item.id == userItem.getItem().get('id')) {\n                const quick = collection['collection'];\n                data.push(quick.id);\n            }\n\n        });\n    });\n    return data;\n};\n"],"names":["_collections","_node","async","document","querySelector","getCollectionData","courseid","setUpUserItemAreClickable","PubSub","subscribe","dropPickedUpListener","bind","Ajax","call","methodname","args","querySelectorAll","forEach","item","makeUserItemNodeClickable","handler","e","target","closest","itemId","dataset","id","ItemModal","init","preventDefault","itemlist","addEventListener","keyCode","node","setAttribute","userItem","useritem","containsItem","getItem","get","updateUserItemQuantity","addUserItem","then","remove","itemnode","quantityNode","newQuantity","quantity","parseInt","textContent","style","display","classList","add","Templates","render","getData","renderUserItem","html","js","collectionids","getCollectionDisplayInfo","template","createElement","innerHTML","content","firstChild","container","append","length","collectionnode","cloneNode","collectioncontainer","appendChild","collectionelement","collectionid","legendelement","innerText","getCollectionString","runTemplateJS","currentcount","countCollectionItems","collection","getInternalCollectionData","window","console","log","data","name","collected","total","collectionresult","quick","push"],"mappings":";;;;;;4PA4BIA,aAAe,GACfC,MAAQ,mBAEQC,MAAAA,WAChBD,MAAQE,SAASC,cAAc,2BAC/BJ,mBAAqBK,kBAAkBC,UAEvCC,4BACAC,OAAOC,UAAU,4BAA6BC,qBAAqBC,cACnEH,OAAOC,UAAU,iBAAkBC,qBAAqBC,qBAGtDN,kBAAqBC,UAChBM,cAAKC,KAAK,CACb,CACIC,WAAY,8BACZC,KAAM,CAACT,SAAUA,aAEtB,GAUDC,0BAA4B,KACbN,MAAMe,iBAAiB,qBAC7BC,SAAQ,SAASC,MACxBC,0BAA0BD,eAGxBE,QAAWC,OACTA,EAAEC,OAAOC,QAAQ,qBAAsB,OAEjCC,OADcH,EAAEC,OAAOC,QAAQ,qBACVE,QAAQC,OAE9BF,cAILG,UAAUC,KAAKJ,QACfH,EAAEQ,uBAINC,SAAW7B,MAAMG,cAAc,cACnC0B,SAASC,iBAAiB,SAAUV,GAAMD,QAAQC,KAClDS,SAASC,iBAAiB,WAAYV,IACjB,IAAbA,EAAEW,SAA8B,IAAbX,EAAEW,SAGzBZ,QAAQC,OAIVF,0BAA6Bc,OAC/BA,KAAKC,aAAa,WAAY,GAC9BD,KAAKC,aAAa,OAAQ,UAC1BD,KAAKC,aAAa,gBAAiB,SAGjCxB,qBAAwBW,QACtBc,SAAWd,EAAEe,SACbC,aAAaF,SAASG,UAAUC,IAAI,OACpCC,uBAAuBL,UAEvBM,YAAYN,UAAUO,MAAK,KAEF,OADAvC,SAASC,cAAc,mBAExCD,SAASC,cAAc,kBAAkBuC,aAMnDN,aAAgBb,QACDvB,MAAMG,cAAc,8BAAgCoB,OAAS,MAI5EgB,uBAA0BL,WACVlC,MAAMe,iBAAiB,8BAAgCmB,SAASG,UAAUC,IAAI,MAAQ,MAC9FtB,SAAS2B,iBACTC,aAAeD,SAASxC,cAAc,kBACtC0C,YAAcX,SAASI,IAAI,YAC3BQ,SAAWC,SAASH,aAAaI,YAAa,IAEpDJ,aAAaI,YAAcH,YAC3BD,aAAaK,MAAMC,QAAU,QAC7BP,SAASQ,UAAUT,OAAO,iBAAmBI,UAC7CH,SAASQ,UAAUC,IAAI,iBAAmBP,iBAI5CL,YAAeN,UA5EGA,CAAAA,UACbmB,mBAAUC,OAAO,wBAAyB,CAC7CrC,KAAMiB,SAASG,UAAUkB,UACzBpB,SAAUD,SAASqB,YA0EhBC,CAAetB,UAAUO,MAAK,CAACgB,KAAMC,YAGlCC,cAAgBC,yBAAyB1B,UACzC2B,SAAW3D,SAAS4D,cAAc,YACxCD,SAASE,UAAYN,WACfzB,KAAO6B,SAASG,QAAQC,WAExBC,UAAYhE,SAASC,cAAc,aACzC6B,KAAKR,QAAQW,SAAWD,SACxBhB,0BAA0Bc,MAC1BkC,UAAUC,OAAO,KACjBD,UAAUC,OAAOnC,MAGb2B,cAAcS,OAAS,GACvBT,cAAc3C,SAAQf,MAAAA,SACdoE,eAAiBrC,KAAKsC,WAAU,SAC9BC,oBAAsBvE,MAAMG,cAAc,+CAAiDsB,GAAK,QAClG8C,oBACAA,oBAAoBC,YAAYH,oBAC7B,OAEGI,kBAAoBvE,SAAS4D,cAAc,YACjDW,kBAAkBtB,UAAUC,IAAI,0BAA2B,OAAQ,OACnEqB,kBAAkBjD,QAAQkD,aAAejD,SAEnCkD,cAAgBzE,SAAS4D,cAAc,UAC7Ca,cAAcxB,UAAUC,IAAI,gCAAiC,OAC7DuB,cAAcC,gBAAkBC,oBAAoBpD,IACpDgD,kBAAkBD,YAAYG,eAC9BF,kBAAkBD,YAAYH,gBACRrE,MAAMG,cAAc,iCAC5BqE,YAAYC,0CAK5BK,cAAcpB,OAI1BmB,oBAAsB5E,MAAAA,qBAClB8E,aAAeC,qBAAqBN,cACpCO,WAAaC,0BAA0BR,cAC7CS,OAAOC,QAAQC,IAAIJ,kBACbK,KAAO,CACTC,KAAMN,WAAU,WAAeM,KAC/BC,UAAWzC,SAASgC,aAAa,GACjCU,MAAOR,WAAU,MAAUb,qBAEP,mBAAU,YAAa,cAAekB,OAI5DN,qBAAwBN,qBACpBH,oBAAsBvE,MAAMG,cAAc,+CAAiDuE,aAAe,SAC3GH,2BACM,SAEGA,oBAAoBpE,cAAc,qBACnCiE,QAGXc,0BAA6BR,mBAC3BgB,iBAAmB,YACvB3F,aAAaiB,SAASiE,aAClBE,OAAOC,QAAQC,IAAIX,cACnBS,OAAOC,QAAQC,IAAIJ,YACfA,WAAU,WAAexD,IAAMiD,eAE/BS,OAAOC,QAAQC,IAAI,iBACnBK,iBAAmBT,eAIpBS,kBAGL9B,yBAA4B1B,eAE1BoD,KAAO,UACXvF,aAAaiB,SAASiE,aAElBA,WAAU,MAAUjE,SAASC,UACrBA,KAAKQ,IAAMS,SAASG,UAAUC,IAAI,MAAO,OACnCqD,MAAQV,WAAU,WACxBK,KAAKM,KAAKD,MAAMlE,WAKrB6D"}
>>>>>>> 5e19d01 (Added the dropid to the prize table and code to gain a prize)
