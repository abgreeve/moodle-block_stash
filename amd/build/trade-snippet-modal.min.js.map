{"version":3,"file":"trade-snippet-modal.min.js","sources":["../src/trade-snippet-modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Snippet modal\n *\n * @copyright  2023 Adrian Greeve <adriangreeve.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Modal from 'core/modal_cancel';\nimport ModalEvents from 'core/modal_events';\nimport Templates from 'core/templates';\nimport Ajax from 'core/ajax';\nimport TradeSnippet from 'block_stash/trade-snippet-shortcode-maker';\n\nconst showModal = async(trade) => {\n    const modal = await buildModal(trade);\n    displayModal(modal);\n};\n\nconst buildModal = async(trade) => {\n    let context = {\n        trade: trade.getData(),\n    };\n\n    window.console.log(context.trade);\n\n    context.tradeitems = await getTradeItems(trade);\n    let tradesnippetmaker = new TradeSnippet(trade);\n    context.snippet = tradesnippetmaker.getSnippet();\n\n    return Modal.create({\n        title: context.trade.name,\n        body: Templates.render('block_stash/trade_snippet_dialogue', context),\n    });\n};\n\nconst displayModal = async(modal) => {\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        modal.destroy();\n    });\n    modal.show();\n};\n\nconst getTradeItems = (trade) => Ajax.call([{\n    methodname: 'block_stash_get_trade_items',\n    args: {tradeid: trade.get('id')}\n}])[0];\n\nexport const init = (trade) => {\n    showModal(trade);\n};\n"],"names":["_interopRequireDefault","e","__esModule","default","_modal_cancel","_modal_events","_templates","_ajax","_tradeSnippetShortcodeMaker","buildModal","async","context","trade","getData","window","console","log","tradeitems","getTradeItems","tradesnippetmaker","TradeSnippet","snippet","getSnippet","Modal","create","title","name","body","Templates","render","displayModal","modal","getRoot","on","ModalEvents","hidden","destroy","show","Ajax","call","methodname","args","tradeid","get","_exports","init","showModal"],"mappings":"kQA0BqE,SAAAA,uBAAAC,UAAAA,GAAAA,EAAAC,WAAAD,GAAAE,QAAAF;;;;;;kFAJrEG,cAAAJ,uBAAAI,eACAC,cAAAL,uBAAAK,eACAC,WAAAN,uBAAAM,YACAC,MAAAP,uBAAAO,OACAC,4BAAAR,uBAAAQ,6BAEA,MAKMC,WAAaC,cACf,IAAIC,QAAU,CACVC,MAAOA,MAAMC,WAGjBC,OAAOC,QAAQC,IAAIL,QAAQC,OAE3BD,QAAQM,iBAAmBC,cAAcN,OACzC,IAAIO,kBAAoB,IAAIC,oCAAaR,OAGzC,OAFAD,QAAQU,QAAUF,kBAAkBG,aAE7BC,sBAAMC,OAAO,CAChBC,MAAOd,QAAQC,MAAMc,KACrBC,KAAMC,mBAAUC,OAAO,qCAAsClB,YAI/DmB,aAAepB,cACjBqB,MAAMC,UAAUC,GAAGC,sBAAYC,OAAQ,KACnCJ,MAAMK,YAEVL,MAAMM,QAGJnB,cAAiBN,OAAU0B,cAAKC,KAAK,CAAC,CACxCC,WAAY,8BACZC,KAAM,CAACC,QAAS9B,MAAM+B,IAAI,UAC1B,GAIFC,SAAAC,KAFmBjC,QAlCHF,eACd,MAAMqB,YAActB,WAAWG,OAC/BkB,aAAaC,QAiCbe,CAAUlC,OACZ"}